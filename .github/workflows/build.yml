name: Compilación y ejecución de pruebas

# Eventos que gatillan la ejecución del pipeline
on:
  # Ejecución manual
  workflow_dispatch:
  # Cada vez que se haga un push al repositorio
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      # Descargar última version desde el repositorio
      - name: Descargar del repositorio
        uses: actions/checkout@v4

      # Instalar java
      - name: Instalar Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # Compilar y empaquetar
      - name: Compilar y empaquetar
        run: mvn --batch-mode -DskipTests package

      # Ejecutar pruebas automatizadas (JUnit)
      - name: Ejecutar pruebas
        run: mvn --batch-mode test

      # Generar un reporte de pruebas
      - name: Reporte de pruebas
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'
    
      # generates coverage-report.md and publishes as checkrun
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: jacoco-report/test.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false
      
      # Publish Coverage Job Summary  # Optional
      - name: Add Jacocoo report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY
          
      # uploads the coverage-report.md artifact  # Optional
      # - name: Upload Code Coverage Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: code-coverage-report-markdown
      #     path: */coverage-results.md 
      #     retention-days: 1  